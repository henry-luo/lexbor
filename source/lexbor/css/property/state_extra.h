/*
 * Generated by utils/lexbor/css/gen_state_extra_header.py
 * Date: 2025-04-01 13:08:35
 * Do not edit manually!
 */

#ifndef LEXBOR_CSS_PROPERTY_STATE_EXTRA_H
#define LEXBOR_CSS_PROPERTY_STATE_EXTRA_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lexbor/css/parser.h"

lxb_css_parser_state_f lxb_css_state_background_image(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_size(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_repeat(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_attachment(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_origin(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_clip(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_background_position(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_radius(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_top_left_radius(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_top_right_radius(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_bottom_right_radius(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_bottom_left_radius(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image_source(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image_slice(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image_width(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image_outset(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image_repeat(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_image(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_outline_style(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_outline_width(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_outline_color(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_outline(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_outline_offset(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_box_shadow(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_shadow(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_decoration_thickness(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_emphasis_style(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_emphasis_color(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_emphasis_position(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_text_emphasis(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_width(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_count(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_columns(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_gap(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_rule_style(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_rule_width(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_rule_color(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_rule(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_span(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_column_fill(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transform(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transform_origin(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transform_style(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_perspective(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_perspective_origin(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_backface_visibility(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transition_property(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transition_duration(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transition_timing_function(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transition_delay(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_transition(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_name(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_duration(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_timing_function(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_iteration_count(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_direction(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_play_state(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_delay(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation_fill_mode(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_animation(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_list_style_type(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_list_style_position(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_list_style_image(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_list_style(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_collapse(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_border_spacing(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_caption_side(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_empty_cells(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_table_layout(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_resize(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_caret_color(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_nav_index(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_nav_up(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_nav_right(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_nav_down(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_nav_left(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_page_break_before(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_page_break_after(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_page_break_inside(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_orphans(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_widows(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_image_orientation(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_content(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_quotes(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_counter_reset(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_counter_increment(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_marker_offset(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_appearance(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_user_select(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_break_before(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_break_after(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_break_inside(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_isolation(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_mix_blend_mode(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_object_fit(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_object_position(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_image_rendering(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_mask_type(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_filter(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_overflow_clip_margin(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_pointer_events(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_scroll_behavior(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_overscroll_behavior(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_scroll_snap_type(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_scroll_snap_align(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_scroll_margin(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_scroll_padding(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_ruby_align(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);
lxb_css_parser_state_f lxb_css_state_ruby_position(lxb_css_parser_t *parser, lxb_css_syntax_token_t *token, void *ctx, lxb_css_syntax_token_t **out_token);

#ifdef __cplusplus
}
#endif

#endif /* LEXBOR_CSS_PROPERTY_STATE_EXTRA_H */